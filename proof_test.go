package c_polygonid

import (
	"math/big"
	"testing"

	"github.com/stretchr/testify/require"
)

func sToI(in string) *big.Int {
	i, ok := new(big.Int).SetString(in, 10)
	if !ok {
		panic(in)
	}
	return i
}

func TestSmartContractProof_UnmarshalJSON(t *testing.T) {
	in := []byte(`{
  "root": "21886963837209295645237802338392436657831338184576939563308136414029471402751",
  "existence": false,
  "siblings": [
    "6191108438878887313089858257093071890109247751515733437254731402827751511135",
    "15252492506357248921683010422171850003902177151921011494591704698371153612891",
    "15018961596920043594893017979264344615788586832976540723682652925892284477641",
    "6227396484016430116096507254505961435403208655685024204321272676352630808661",
    "1675767912446047403475822485075507021783309024163334664263442124838492785381",
    "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
    "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"
  ],
  "index": "7620678129862513343043520404117038257929715417156701395854762685236968707286",
  "value": "12531801231521618639953387176086811127809839642129894598674415337045749557906",
  "auxExistence": true,
  "auxIndex": "19503047644893154503061167588860147737124125029994335888880441528414786195286",
  "auxValue": "12531801231521618639953387176086811127809839642129894598674415337045749557906"
}`)
	want := SmartContractProof{
		Root:      sToI("21886963837209295645237802338392436657831338184576939563308136414029471402751"),
		Existence: false,
		Siblings: []*big.Int{
			sToI("6191108438878887313089858257093071890109247751515733437254731402827751511135"),
			sToI("15252492506357248921683010422171850003902177151921011494591704698371153612891"),
			sToI("15018961596920043594893017979264344615788586832976540723682652925892284477641"),
			sToI("6227396484016430116096507254505961435403208655685024204321272676352630808661"),
			sToI("1675767912446047403475822485075507021783309024163334664263442124838492785381"),
			big.NewInt(0), big.NewInt(0), big.NewInt(0), big.NewInt(0),
			big.NewInt(0), big.NewInt(0), big.NewInt(0), big.NewInt(0),
			big.NewInt(0), big.NewInt(0), big.NewInt(0), big.NewInt(0),
			big.NewInt(0), big.NewInt(0), big.NewInt(0), big.NewInt(0),
			big.NewInt(0), big.NewInt(0), big.NewInt(0), big.NewInt(0),
			big.NewInt(0), big.NewInt(0), big.NewInt(0), big.NewInt(0),
			big.NewInt(0), big.NewInt(0), big.NewInt(0),
		},
		AuxExistence: true,
		AuxIndex:     sToI("19503047644893154503061167588860147737124125029994335888880441528414786195286"),
		AuxValue:     sToI("12531801231521618639953387176086811127809839642129894598674415337045749557906"),
	}

	var res SmartContractProof
	err := res.UnmarshalJSON(in)
	require.NoError(t, err)
	require.Equal(t, want, res)
}
